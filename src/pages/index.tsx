import { createServerSideHelpers } from "@trpc/react-query/server";
import { BookOpenCheck, KanbanSquare, ListChecks } from "lucide-react";
import { GetServerSidePropsContext, InferGetServerSidePropsType } from "next";
import { signOut } from "next-auth/react";
import Head from "next/head";
import Image from "next/image";
import SuperJSON from "superjson";
import CommandMenu from "~/components/CommandMenu";
import Overview from "~/components/Overview";
import RecentTasks from "~/components/RecentTasks";
import { Avatar, AvatarFallback, AvatarImage } from "~/components/ui/avatar";
import { Button } from "~/components/ui/button";
import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from "~/components/ui/card";
import { ScrollArea } from "~/components/ui/scroll-area";
import { api } from "~/lib/api";
import { useCreateBoard } from "~/lib/hooks/use-create-board";
import { avatarFallback } from "~/lib/utils";
import { appRouter } from "~/server/api/root";
import { createInnerTRPCContext } from "~/server/api/trpc";
import { getServerAuthSession } from "~/server/auth";

export default function Home({
  userSession,
}: InferGetServerSidePropsType<typeof getServerSideProps>) {
  const { data: statistic } = api.user.userStatistics.useQuery();

  return (
    <>
      <Head>
        <title>Kanban task management</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="relative flex-grow bg-board-background">
        <header className="flex items-center justify-between border-0 border-b border-solid border-main-border bg-main-background px-5 py-3.5">
          <figure className="flex w-full items-center gap-x-2">
            <Avatar>
              <AvatarImage
                src={userSession.user.image || undefined}
                alt="@user"
              />
              <AvatarFallback>
                {avatarFallback(userSession.user.name!)}
              </AvatarFallback>
            </Avatar>
            <figcaption className="text-2xl font-bold text-primary">
              {userSession.user.name}
            </figcaption>
          </figure>
          <div className="flex items-center gap-3">
            <CommandMenu />
            <Button onClick={() => void signOut()} variant="destructive">
              Logout
            </Button>
          </div>
        </header>

        <ScrollArea className="h-[calc(100vh-68.8px)] w-full">
          <section className="space-y-5 p-5">
            <div className="grid gap-4 md:grid-cols-2 lg:grid-cols-4">
              <Card className="border border-solid border-main-border bg-main-background">
                <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
                  <CardTitle className="text-sm font-medium">
                    Total Boards
                  </CardTitle>
                  <KanbanSquare className="h-5 w-5 text-muted-foreground" />
                </CardHeader>
                <CardContent>
                  <div className="text-2xl font-bold">
                    {statistic?.totalBoards ?? 0}
                  </div>
                </CardContent>
              </Card>

              <Card className="border border-solid border-main-border bg-main-background">
                <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
                  <CardTitle className="text-sm font-medium">
                    Total Tasks
                  </CardTitle>
                  <BookOpenCheck className="h-5 w-5 text-muted-foreground" />
                </CardHeader>
                <CardContent>
                  <div className="text-2xl font-bold">
                    {statistic?.totalTasks ?? 0}
                  </div>
                </CardContent>
              </Card>

              <Card className="border border-solid border-main-border bg-main-background">
                <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
                  <CardTitle className="text-sm font-medium">
                    Total Subtasks
                  </CardTitle>
                  <ListChecks className="h-5 w-5 text-muted-foreground" />
                </CardHeader>
                <CardContent>
                  <div className="text-2xl font-bold">
                    {statistic?.totalSubtasks ?? 0}
                  </div>
                </CardContent>
              </Card>

              <Card className="border border-solid border-main-border bg-main-background">
                <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
                  <CardTitle className="text-sm font-medium">
                    Current Plan
                  </CardTitle>
                  <KanbanSquare className="h-5 w-5 text-muted-foreground" />
                </CardHeader>
                <CardContent>
                  <div className="text-2xl font-bold">Free</div>
                </CardContent>
              </Card>
            </div>

            <div className="grid grid-cols-7 gap-4">
              <Card className="col-span-4 border border-solid border-main-border bg-main-background">
                <CardHeader>
                  <CardTitle>
                    Tasks Overview ({new Date().getFullYear()})
                  </CardTitle>
                </CardHeader>
                <CardContent className="pl-2">
                  <Overview />
                </CardContent>
              </Card>
              <Card className="col-span-3 border border-solid border-main-border bg-main-background">
                <CardHeader>
                  <CardTitle>Recent Tasks</CardTitle>
                  <CardDescription>
                    Tasks created recently by you.
                  </CardDescription>
                </CardHeader>
                <CardContent>
                  <RecentTasks />
                </CardContent>
              </Card>
            </div>

            <footer className="pt-2 text-muted-foreground">
              Built by{" "}
              <a
                target="_blank"
                href="https://github.com/arafat4693/"
                className="font-bold underline"
              >
                Arafat
              </a>
              . The source code is available on{" "}
              <a
                target="_blank"
                href="https://github.com/arafat4693/kanban-task"
                className="font-bold underline"
              >
                Github
              </a>
              .
            </footer>
          </section>
        </ScrollArea>
      </main>
    </>
  );
}

export async function getServerSideProps(context: GetServerSidePropsContext) {
  console.log("first");

  const userSession = (await getServerAuthSession(context))!;

  const ssg = createServerSideHelpers({
    router: appRouter,
    ctx: createInnerTRPCContext({ session: userSession }),
    transformer: SuperJSON,
  });

  await Promise.allSettled([
    ssg.user.userStatistics.prefetch(),
    ssg.task.recentTasks.prefetch(),
    ssg.task.tasksStatistic.prefetch(),
  ]);

  return {
    props: {
      userSession,
      trpcState: ssg.dehydrate(),
    },
  };
}

/* <section className="absolute -translate-x-1/2 -translate-y-1/2 left-1/2 top-1/2 w-fit">
    <h3 className="text-3xl font-bold text-center text-primary">
      Welcome {userSession.user.name}
    </h3>
    <p className="my-1 text-base text-center text-muted-foreground">
      You are one step closer to your productive life. Start by creating a
      new board
    </p>
    <div className="flex items-center justify-center">
      <Button
        onClick={openCreateBoard}
        size="full"
        className="px-5 py-6 mt-3 text-base"
      >
        +Create Board
      </Button>
    </div>
  </section> */
